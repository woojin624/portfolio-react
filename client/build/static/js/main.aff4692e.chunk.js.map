{"version":3,"sources":["components/Home.js","components/Games/MemoryGame.js","components/Games/EtcGame.js","components/Games.js","components/Projects.js","components/NavBar.js","components/admin/AdminHome.js","components/admin/AdminList.js","components/admin/AdminWrite.js","components/admin/Admin.js","components/ProjectDetail.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","leftBoxClass","rightBoxClass","useEffect","axios","get","then","res","console","log","data","catch","err","boxTransition","leftIn","transform","leftOut","rightIn","rightOut","motion","div","initial","opacity","animate","exit","transition","duration","className","variants","MemoryGame","rankList","setRankList","rank","isGameStart","setIsGameStart","openCard","setOpenCard","matched","setMatched","isClear","setIsClear","isCardHold","setIscardHold","time","setTime","timerOn","setTimerOn","pokemons","id","name","pairOfPokemons","setPairOfPokemons","stopGame","interval","setInterval","prevTime","clearInterval","firstmatch","secondmatch","length","setTimeout","onClick","e","preventDefault","arr","a","j","x","i","Math","floor","random","shuffle","slice","map","pokemon","flipCard","includes","opened","handleFlip","src","alt","width","EtcGame","Games","location","useLocation","history","useHistory","onCardClick","gameId","target","dataset","push","AnimatePresence","exitBeforeEnter","path","exact","p","start","fontSize","fontWeight","y","in","end","data-name","pathname","withRouter","isLoading","setIsLoading","projectsList","setProjectsList","projectBoxMotion","hidden","visible","workId","delayChildren","staggerChildren","project","data-id","_id","style","backgroundImage","thumb","title","content","NavBar","isNavOpen","setIsNavOpen","navCloseHandler","navElVariants","out","to","ul","li","whileHover","scale","textShadow","AdminHome","AdminList","onDeleteWork","delete","response","Table","responsive","color","tempArr","sort","b","element","AdminWrite","projectContent","setProjectContetns","getValue","value","type","onChange","post","alert","Admin","backgroundColor","height","position","zIndex","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","match","projectsDetail","setProjectsDetail","params","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aff4692e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './main.css';\nimport { motion } from 'framer-motion';\n\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [leftBoxClass, setLeftBoxClass] = useState('home-box-l home-hide-l');\n  const [rightBoxClass, setRightBoxClass] = useState('home-box-r home-hide-r');\n\n  useEffect(() => {\n    axios\n      .get('/api/projectlist')\n      .then((res) => {\n        console.log(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    // setLeftBoxClass('home-box-l');\n    // setRightBoxClass('home-box-r');\n\n    return () => {\n      console.log('언마운트');\n    };\n  }, []);\n\n  const boxTransition = {\n    leftIn: {\n      transform: 'translate(0%, 0)',\n    },\n    leftOut: {\n      transform: 'translate(-100%, 0)',\n    },\n    rightIn: {\n      transform: 'translate(0%, 0)',\n    },\n    rightOut: {\n      transform: 'translate(100%, 0)',\n    },\n  };\n\n  return (\n    <>\n      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} transition={{ duration: 0.3 }}>\n        <div className='land-contain'>\n          <motion.div initial='leftOut' animate='leftIn' exit='leftOut' transition={{ duration: 0.5 }} variants={boxTransition} className={leftBoxClass} />\n          <motion.div initial='rightOut' animate='rightIn' exit='rightOut' transition={{ duration: 0.5 }} variants={boxTransition} className={rightBoxClass} />\n        </div>\n      </motion.div>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './MemoryGame.css';\n\nconst MemoryGame = () => {\n  const [rankList, setRankList] = useState([]);\n  useEffect(() => {\n    axios\n      .get(`/api/gamerank/memorygame`)\n      .then((res) => {\n        setRankList(res.data.rank);\n        //   setIsLoading(false);\n        console.log(res.data.rank);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  // get pokemon api\n  const url = 'https://pokeres.bastionbot.org/images/pokemon';\n  // 게임 시작 여부\n  const [isGameStart, setIsGameStart] = useState(false);\n  // 열린 카드 배열\n  const [openCard, setOpenCard] = useState([]);\n  // 열린 카드가 일치하다면 그것을 담을 배열\n  const [matched, setMatched] = useState([]);\n\n  // 게임 클리어 여부\n  const [isClear, setIsClear] = useState(true);\n\n  // 카드 홀드 여부\n  const [isCardHold, setIscardHold] = useState(false);\n\n  // 타이머 변수\n  const [time, setTime] = useState(0);\n  const [timerOn, setTimerOn] = useState(false);\n\n  // 포켓몬을 담은 변수\n  const pokemons = [\n    { id: 1, name: '이상해씨' },\n    { id: 4, name: '파이리' },\n    { id: 8, name: '어니부기' },\n    { id: 9, name: '거북왕' },\n    { id: 6, name: '리자몽' },\n    { id: 10, name: '캐터피' },\n    { id: 19, name: '꼬렛' },\n    { id: 39, name: '푸린' },\n  ];\n  // 카드 랜덤으로 섞는 함수\n  const shuffle = (a) => {\n    let j, x, i;\n    for (i = a.length; i; i -= 1) {\n      j = Math.floor(Math.random() * i);\n      x = a[i - 1];\n      a[i - 1] = a[j];\n      a[j] = x;\n    }\n  };\n\n  // 각쌍의 카드 만들기\n  const [pairOfPokemons, setPairOfPokemons] = useState([...pokemons, ...pokemons]);\n  // open only that card which was matched\n\n  // 스타트게임 버튼을 누르면 실행되는 함수.\n  const startGame = (e) => {\n    e.preventDefault();\n    // 타이머 시작\n    setTime(0);\n    setTimerOn(true);\n    // 게임시작 여부 true로 변경\n    setIsGameStart(true);\n    // 오픈된 카드 초기화\n    setOpenCard([]);\n    // 매치된 함수 초기화\n    setMatched([]);\n    // 각쌍을 만든 포켓몬의 배열을 복제하고 랜덤으로 섞고 바꿔준다.\n    let arr = [...pairOfPokemons];\n    shuffle(arr);\n    setPairOfPokemons(arr);\n  };\n\n  const stopGame = () => {\n    // 타이머 종료\n    setTimerOn(false);\n    // 타이머 시간을 0으로 바꿔준다\n    // 게임시작 여부 false로 변경\n    setIsGameStart(false);\n  };\n\n  // 게임이 다 끝난 후 재시작하는 버튼\n  const restartGame = (e) => {\n    e.preventDefault();\n    stopGame();\n    setTime(0);\n  };\n\n  // 타이머에 변동이 있다면 실행되는 이펙트\n  useEffect(() => {\n    // 타이머 실행의 주가 될 interval을 초기값 null로 지정\n    let interval = null;\n    // 만약 timerOn이 true가 되면 실행될 부분\n    if (timerOn) {\n      // 0.01초 단위로 타이머가 올라간다\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime + 10);\n      }, 10);\n      // timerOn이 false가 되면 interval을 종료한다.\n    } else {\n      clearInterval(interval);\n    }\n    // 퉤\n    return () => clearInterval(interval);\n  }, [timerOn]);\n\n  // openCard배열에 변화가 있다면 실행될 이펙트\n  useEffect(() => {\n    console.log(openCard);\n\n    if (openCard < 2) return;\n\n    // firstmatch에 첫번째 클릭하여 오픈된 카드의 index에 해당하는 숫자를 pairOfPokemons 배열에 비교하여\n    // pairOfPokemons 배열의 index번째의 정보를 담는다.\n    const firstmatch = pairOfPokemons[openCard[0]];\n    // 위와 마찬가지로 secondmatch에 카드의 정보를 담는다.\n    const secondmatch = pairOfPokemons[openCard[1]];\n    // 만약 두번째 클릭한 카드(secondmatch)가 있다면\n    // 첫번째 카드와 두번째 카드의 id 정보를 비교한다\n    if (secondmatch && firstmatch.id === secondmatch.id) {\n      //두 카드의 id값이 같다면\n      // matched배열에 첫번째 카드의 id를 저장한다.\n      // 이렇게 저장을 하면 아래의 코드 중\n      // if (matched.includes(pokemon.id)) flipCard = true;\n      // 이것에 의하여 매치된 카드는 오픈상태를 유지하게 된다.\n      setMatched([...matched, firstmatch.id]);\n    }\n    // 그 후 오픈된 카드의 갯수가 2개라면 0.6초 뒤에 오픈된 카드를 다시 뒤집는다.\n    if (openCard.length === 2) {\n      setIscardHold(true);\n      setTimeout(() => {\n        setIscardHold(false);\n        setOpenCard([]);\n      }, 400);\n    }\n  }, [openCard]);\n\n  useEffect(() => {\n    console.log(matched);\n    if (matched.length === 8) {\n      setIsClear(true);\n      stopGame();\n    }\n  }, [matched]);\n\n  // 카드를 클릭하면 실행할 함수\n  // openCard 배열에 현재 클릭된 카드의 인덱스를 담는다.\n  const handleFlip = (i) => {\n    setOpenCard((opened) => [...opened, i]);\n  };\n\n  return (\n    <>\n      <div className='memory-game'>\n        <h2 className='memory-title'>Memory Game</h2>\n        {isGameStart ? (\n          <button className='memory-start-btn' onClick={restartGame}>\n            Restart\n          </button>\n        ) : (\n          <button className='memory-start-btn' onClick={startGame}>\n            Start\n          </button>\n        )}\n        <article className='memory-timer'>\n          <span>{('0' + Math.floor((time / 60000) % 60)).slice(-2)}m </span>\n          <span>{('0' + Math.floor((time / 1000) % 60)).slice(-2)}s </span>\n          <span>{('0' + ((time / 10) % 100)).slice(-2)}</span>\n        </article>\n        <div className={`cards ${isGameStart ? '' : 'hold'}`}>\n          {pairOfPokemons.map((pokemon, i) => {\n            // let's flip the card with flipped css class\n            let flipCard;\n            flipCard = false;\n\n            // openCard 배열의 담긴 인덱스에 속하는 카드는 flipCard변수를 true상태로 유지.\n            if (openCard.includes(i)) flipCard = true;\n\n            // matched 배열의 담긴 요소의 id와 일치하는 카드는 flipCard변수를 true상태로 유지.\n            if (matched.includes(pokemon.id)) flipCard = true;\n\n            return (\n              <div\n                className={`pokemon-card ${flipCard ? 'flipped' : ''} ${isCardHold ? 'hold' : ''}`}\n                key={i} //\n                onClick={(e) => {\n                  handleFlip(i);\n                }}\n              >\n                <div className='inner'>\n                  <div className='front'>\n                    <img src={`${url}/${pokemon.id}.png`} alt='pokemon' width='100' />\n                  </div>\n                  <div className='back'></div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        {isClear ? (\n          <div className='card-clear-pop'>\n            <div className='card-clear-modal'>\n              <h3>CLEAR!</h3>\n              <h4>{time}</h4>\n              <article className='memory-timer'>\n                <span>You left - </span>\n                <span>{('0' + Math.floor((time / 60000) % 60)).slice(-2)}m </span>\n                <span>{('0' + Math.floor((time / 1000) % 60)).slice(-2)}.</span>\n                <span>{('0' + ((time / 10) % 100)).slice(-2)}s</span>\n              </article>\n              <div className='card-modal-rank'>\n                <h2>Ranking</h2>\n                <ul className='rank-list'>\n                  {rankList &&\n                    rankList.map((rank, i) => {\n                      return (\n                        <li key={i}>\n                          <span className='rank-rate'>{i + 1}.</span>\n                          <span className='rank-name'>{rank.name}</span>\n                          <span className='rank-score'>\n                            {rank.time > 60000 && <span>{('0' + Math.floor((rank.time / 60000) % 60)).slice(-2)}m </span>}\n                            <span>{('0' + Math.floor((rank.time / 1000) % 60)).slice(-2)}.</span>\n                            <span>{('0' + ((rank.time / 10) % 100)).slice(-2)}s</span>\n                          </span>\n                        </li>\n                      );\n                    })}\n                </ul>\n              </div>\n              <button className='card-modal-close' onClick={() => setIsClear(false)}>\n                닫기\n              </button>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n};\n\nexport default MemoryGame;\n","import React from 'react';\n\nconst EtcGame = () => {\n  return <div>이것은 다른 게임임</div>;\n};\n\nexport default EtcGame;\n","import React from 'react';\nimport { Route, Switch, useLocation, BrowserRouter as Router, useHistory } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport MemoryGame from './Games/MemoryGame';\nimport EtcGame from './Games/EtcGame';\nconst Games = () => {\n  const location = useLocation();\n  let history = useHistory();\n  const gameTextMotion = {\n    start: {\n      opacity: 0,\n      fontSize: '10px',\n      fontWeight: '300',\n      y: -400,\n    },\n    in: {\n      opacity: 1,\n      fontSize: '48px',\n      fontWeight: '700',\n      y: 0,\n    },\n    end: {\n      opacity: 0,\n      fontSize: '24px',\n      fontWeight: '400',\n      y: 600,\n    },\n  };\n\n  const gameListVariants = {\n    start: {\n      opacity: 0,\n    },\n    in: {\n      opacity: 1,\n    },\n    end: {\n      opacity: 0,\n    },\n  };\n\n  const onCardClick = (e) => {\n    let gameId = e.target.dataset.name;\n    console.log(gameId);\n    history.push(`/games/${gameId}`);\n  };\n\n  return (\n    <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} transition={{ duration: 0.3 }} className='games-back'>\n      <div className='games-contain'>\n        <Router>\n          <AnimatePresence exitBeforeEnter>\n            <Switch location={location} key={location.pathname}>\n              <Route path='/games/memorygame'>\n                <MemoryGame />\n              </Route>\n              <Route path='/games/etcgame'>\n                <EtcGame />\n              </Route>\n              <Route exact path='/games'>\n                <motion.p initial='start' animate='in' exit='end' transition={{ duration: 0.3 }} variants={gameTextMotion}>\n                  Games\n                </motion.p>\n                <motion.div\n                  className='games-list'\n                  initial='start' //\n                  animate='in'\n                  exit='end'\n                  transition={{ duration: 0.3 }}\n                  variants={gameListVariants}\n                >\n                  <div onClick={onCardClick} data-name='memorygame'>\n                    <h2>Memory Games</h2>\n                  </div>\n                  <div onClick={onCardClick} data-name='etcgame'>\n                    <h2>ETC Games</h2>\n                  </div>\n                </motion.div>\n              </Route>\n            </Switch>\n          </AnimatePresence>\n        </Router>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Games;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { motion } from 'framer-motion';\nimport { useHistory, withRouter } from 'react-router-dom';\n\nconst Projects = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [projectsList, setProjectsList] = useState([]);\n  // const location = useLocation();\n  let history = useHistory();\n\n  useEffect(() => {\n    axios\n      .get('/api/projectlist')\n      .then((res) => {\n        setProjectsList(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const projectBoxWrap = {\n    hidden: { opacity: 1 },\n    visible: {\n      opacity: 1,\n      transition: {\n        delayChildren: 0,\n        staggerChildren: 0.1,\n      },\n    },\n  };\n\n  const projectBoxMotion = {\n    hidden: { y: 50, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n    },\n  };\n\n  // 프로젝트 카드 클릭시 해당 상세페이지로 이동\n  const onCardClick = (e) => {\n    let workId = e.target.dataset.id;\n    history.push(`/projects/${workId}`);\n  };\n\n  return (\n    <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} transition={{ duration: 0.3 }}>\n      <div className='projects-contain'>\n        {isLoading ? (\n          <div>Loading...</div>\n        ) : (\n          <>\n            <motion.div className='project-box-wrap' variants={projectBoxWrap} initial='hidden' animate='visible' exit='hidden'>\n              {projectsList.map((project, i) => (\n                <motion.div\n                  onClick={onCardClick} //\n                  data-id={project._id}\n                  variants={projectBoxMotion}\n                  style={{ backgroundImage: `url('${project.thumb}')` }}\n                  className={`project-box`}\n                  key={i}\n                >\n                  <h4 className='project-box-title'>{project.title}</h4>\n                  <p className='project-box-content'>{project.content}</p>\n                </motion.div>\n              ))}\n            </motion.div>\n          </>\n        )}\n      </div>\n\n      {/* 이 부분에서 새로고침이나 url을 통한 접근 시 렌더링이 안되는 현상 체크 */}\n      {/* <AnimatePresence exitBeforeEnter>\n        <Switch location={location} key={location.key}>\n          <Route path='/projects/:id'>\n            <ProjectDetail />\n          </Route>\n        </Switch>\n      </AnimatePresence> */}\n    </motion.div>\n  );\n};\n\nexport default withRouter(Projects);\n","import React, { useState } from 'react';\n\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport './NavBar.css';\n\nconst NavBar = () => {\n  const navListNames = {\n    names: ['projects', 'games', 'blog', 'github', 'admin'],\n  };\n  const [isNavOpen, setIsNavOpen] = useState(false);\n\n  const navToggleHandler = () => {\n    setIsNavOpen(!isNavOpen);\n  };\n  const navCloseHandler = () => {\n    setIsNavOpen(false);\n  };\n\n  const navContainVariants = {\n    in: {\n      opacity: 1,\n      transition: { duration: 0.5, staggerChildren: 0.1 },\n    },\n    out: {\n      opacity: 0,\n      transition: { duration: 0.5, staggerChildren: 0.1 },\n    },\n  };\n\n  const navUlVariants = {\n    in: {\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.5, staggerChildren: 0.1 },\n    },\n    out: {\n      opacity: 0,\n      y: 200,\n      transition: { duration: 0.5, staggerChildren: 0.1 },\n    },\n  };\n\n  const navElVariants = {\n    in: {\n      opacity: 1,\n      x: 0,\n    },\n    out: {\n      opacity: 0,\n      x: -70,\n    },\n  };\n\n  return (\n    <>\n      <h3 className='nav-logo' onClick={navCloseHandler}>\n        <Link to={'/'}>J.com</Link>\n      </h3>\n      <div className={isNavOpen ? 'nav-toggle-btn opened' : 'nav-toggle-btn'} onClick={navToggleHandler}>\n        <div className='nav-toggle-top'></div>\n        <div className='nav-toggle-bottom'></div>\n      </div>\n      <AnimatePresence>\n        {isNavOpen ? (\n          <motion.div\n            initial='out' //\n            animate='in'\n            exit='out'\n            variants={navContainVariants}\n            className='nav-contain'\n          >\n            <motion.ul className='nav-list' variants={navUlVariants}>\n              {navListNames.names.map((name, i) => (\n                <motion.li\n                  key={i} //\n                  variants={navElVariants}\n                  transition={{ duration: 0.4 }}\n                  whileHover={{\n                    scale: 1.1,\n                    textShadow: '0px 0px 2px rgb(255,255,255)',\n                  }}\n                  onClick={navCloseHandler}\n                >\n                  <Link to={`/${name}`}>{name}</Link>\n                </motion.li>\n              ))}\n            </motion.ul>\n          </motion.div>\n        ) : null}\n      </AnimatePresence>\n    </>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\n\nconst AdminHome = () => {\n  return <div>AdminHome</div>;\n};\n\nexport default AdminHome;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Table } from 'react-bootstrap';\n\nconst AdminList = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [projectsList, setProjectsList] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get('/api/projectlist')\n      .then((res) => {\n        setProjectsList(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  // 삭제버튼 클릭 시 워크 삭제\n  const onDeleteWork = (e) => {\n    let workId = e.target.dataset.id;\n    axios\n      //DELETE 요청의 두 번째 인자에 data: {} atrribute를 넣어주면 된다.\n      .delete('/api/deleteproject', {\n        data: { _id: workId },\n      })\n      .then((response) => {\n        console.log(response.data);\n      });\n  };\n\n  // 글번호 오름차순 정렬\n  const handleNumberSortUp = () => {\n    let tempArr = [...projectsList];\n    tempArr.sort(function (a, b) {\n      return a._id < b._id ? -1 : a._id > b._id ? 1 : 0;\n    });\n    setProjectsList(tempArr);\n  };\n  // 글번호 내림차순 정렬\n  const handleNumberSortDown = () => {\n    let tempArr = [...projectsList];\n    tempArr.sort(function (a, b) {\n      return a._id > b._id ? -1 : a._id < b._id ? 1 : 0;\n    });\n    setProjectsList(tempArr);\n  };\n  // 카테고리 오름차순 정렬\n  const handleCategorySortUp = () => {\n    let tempArr = [...projectsList];\n    tempArr.sort(function (a, b) {\n      let x = a.category.toLowerCase();\n      let y = b.category.toLowerCase();\n      if (x < y) {\n        return -1;\n      }\n      if (x > y) {\n        return 1;\n      }\n      return 0;\n    });\n    setProjectsList(tempArr);\n  };\n  // 카테고리 내림차순 정렬\n  const handleCategorySortDown = () => {\n    let tempArr = [...projectsList];\n    tempArr.sort(function (a, b) {\n      let x = a.category.name[0].toLowerCase();\n      let y = b.category.name[0].toLowerCase();\n      if (x < y) {\n        return 1;\n      }\n      if (x > y) {\n        return -1;\n      }\n      return 0;\n    });\n    setProjectsList(tempArr);\n  };\n\n  var tStyle = { color: 'blue' };\n\n  return isLoading ? (\n    <div>Loading...</div>\n  ) : (\n    <>\n      <Table responsive>\n        <thead>\n          <tr style={tStyle}>\n            <th>\n              <div className='sort-flex'>\n                <span>글번호</span>\n                <div className='sort-arrow'>\n                  <div className='arrow-up' onClick={handleNumberSortUp}></div>\n                  <div className='arrow-down' onClick={handleNumberSortDown}></div>\n                </div>\n              </div>\n            </th>\n            <th>제목</th>\n            <th>내용</th>\n            <th>비고</th>\n          </tr>\n        </thead>\n        <tbody>\n          {projectsList.map((element, i) => {\n            return (\n              // a = props.state[i]\n              <tr key={i}>\n                <td>{element._id}</td>\n                <td>{element.title}</td>\n                <td>{element.content}</td>\n                <td>\n                  <button data-id={element._id} onClick={onDeleteWork}>\n                    삭제\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default AdminList;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AdminWrite = () => {\n  const [projectContent, setProjectContetns] = useState({\n    title: '',\n    content: '',\n    thumb: '',\n  });\n\n  const { title, content, thumb } = projectContent;\n\n  // 작성되는 글의 각 요소의 밸류값을 받아오는 함수\n  const getValue = (e) => {\n    const { name, value } = e.target;\n    setProjectContetns({\n      ...projectContent,\n      [name]: value,\n    });\n  };\n\n  const send = () => {\n    axios\n      .post('/api/addproject', {\n        title: projectContent.title,\n        content: projectContent.content,\n        thumb: projectContent.thumb,\n      })\n      .then((response) => {\n        console.log(response.data);\n      });\n    alert('등록 완료!');\n  };\n\n  return (\n    <>\n      <div>AdminWrite</div>\n      <form>\n        title\n        <input type='text' value={title} name='title' onChange={getValue} />\n        <br />\n        content\n        <input type='text' value={content} name='content' onChange={getValue} />\n        <br />\n        thumb\n        <input type='text' value={thumb} name='thumb' onChange={getValue} />\n        <br />\n        <button\n          onClick={() => {\n            send();\n          }}\n        >\n          등록\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default AdminWrite;\n","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\nimport AdminHome from './AdminHome';\nimport AdminList from './AdminList';\nimport AdminWrite from './AdminWrite';\nconst Admin = () => {\n  return (\n    <div style={{ backgroundColor: '#fff', width: '100vw', height: '100vh', position: 'relative', zIndex: 1000 }}>\n      <Router>\n        <Navbar bg='light' expand='lg'>\n          <Navbar.Brand href='/admin'>J.COM - admin</Navbar.Brand>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='mr-auto'>\n              <Nav.Link as={Link} to='/admin'>\n                Home\n              </Nav.Link>\n              <Nav.Link as={Link} to='/admin/write'>\n                Write\n              </Nav.Link>\n              <Nav.Link as={Link} to='/admin/list'>\n                List\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n\n        <div className='admin-container'>\n          <Switch>\n            <Route exact path='/admin'>\n              <AdminHome />\n            </Route>\n            <Route path='/admin/write'>\n              <AdminWrite />\n            </Route>\n            <Route path='/admin/list'>\n              <AdminList />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default Admin;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport './main.css';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nconst ProjectDetail = ({ match }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [projectsDetail, setProjectsDetail] = useState({});\n\n  let history = useHistory();\n\n  const id = match.params.id;\n\n  useEffect(() => {\n    axios\n      .get(`/api/projectDetail/${id}`)\n      .then((res) => {\n        setProjectsDetail(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const projectDetailMotion = {\n    in: {\n      y: '0%',\n    },\n    out: {\n      y: '100%',\n    },\n  };\n\n  const projectClose = () => {\n    history.push('/projects');\n  };\n\n  return (\n    <motion.div initial='out' animate='in' exit='out' transition={{ duration: 0.3 }} variants={projectDetailMotion} className='projectDetail-wrap'>\n      {isLoading ? (\n        <div>loading</div>\n      ) : (\n        <>\n          <h1>{projectsDetail.title}</h1>\n          <p>{projectsDetail.content}</p>\n        </>\n      )}\n      <div className='project-close-btn' onClick={projectClose}></div>\n    </motion.div>\n  );\n};\n\nexport default withRouter(ProjectDetail);\n","import React from 'react';\nimport './App.css';\n\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport { AnimatePresence } from 'framer-motion';\n\nimport Home from './components/Home';\nimport Games from './components/Games';\nimport Projects from './components/Projects';\nimport NavBar from './components/NavBar';\nimport Admin from './components/admin/Admin';\nimport ProjectDetail from './components/ProjectDetail';\n\nconst App = () => {\n  const location = useLocation();\n\n  return (\n    <div className='App'>\n      <NavBar />\n      <div className='whole-container'>\n        <AnimatePresence exitBeforeEnter>\n          <Switch location={location} key={location.pathname}>\n            <Route path='/projects/:id'>\n              <ProjectDetail />\n            </Route>\n            <Route exact path='/projects'>\n              {/* <Router> */}\n              <Projects />\n              {/* </Router> */}\n            </Route>\n            <Route path='/games'>\n              <Games />\n            </Route>\n            <Route path='/admin'>\n              <Admin />\n            </Route>\n            <Route exact path='/'>\n              <Home />\n            </Route>\n          </Switch>\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Reset } from 'styled-reset';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <Reset />\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}