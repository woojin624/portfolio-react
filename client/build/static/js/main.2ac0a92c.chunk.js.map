{"version":3,"sources":["redux/projects/types.js","redux/users/types.js","components/Home.js","components/Games/MemoryGame/MemoryClearModal.js","components/Games/MemoryGame/MemoryGame.js","components/Games/EtcGame.js","components/Games.js","components/Projects.js","components/NavBar.js","components/admin/AdminHome.js","components/admin/AdminList.js","components/admin/AdminWrite.js","components/admin/Admin.js","components/ProjectDetail.js","App.js","redux/projects/actions.js","reportWebVitals.js","redux/projects/reducers.js","redux/users/reducers.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["GLOBAL_LOADED_FAILURE","GLOBAL_LOADED_SUCEESS","GLOBAL_LOADED_REQUEST","LOGIN_USER","REGISTER_USER","AUTH_USER","Home","useState","leftBoxClass","rightBoxClass","useEffect","console","log","boxTransition","leftIn","transform","leftOut","rightIn","rightOut","motion","div","initial","opacity","animate","exit","transition","duration","className","variants","MemoryClearModal","time","rankList","setIsClear","newRankList","setNewRankList","name","newRank","setNewRank","isRankRecord","setIsRankRecord","axios","put","rank","then","response","Math","floor","slice","type","value","onChange","e","target","placeholder","onClick","arr","sort","a","b","map","i","MemoryGame","setRankList","get","res","data","catch","err","isGameStart","setIsGameStart","openCard","setOpenCard","matched","setMatched","isClear","isCardHold","setIscardHold","setTime","timerOn","setTimerOn","pokemons","id","pairOfPokemons","setPairOfPokemons","stopGame","interval","setInterval","prevTime","clearInterval","firstmatch","secondmatch","length","setTimeout","preventDefault","j","x","random","shuffle","pokemon","flipCard","includes","opened","handleFlip","src","alt","width","EtcGame","Games","setGameRank","memoryRank","setMemoryRank","isLoading","setIsLoading","location","useLocation","history","useHistory","onCardClick","gameId","dataset","push","AnimatePresence","exitBeforeEnter","path","exact","p","start","fontSize","fontWeight","y","in","end","data-name","pathname","connect","projectsList","projects","withRouter","projectBoxMotion","hidden","visible","workId","delayChildren","staggerChildren","project","data-id","_id","style","backgroundImage","thumb","title","content","NavBar","isNavOpen","setIsNavOpen","navCloseHandler","navElVariants","out","to","ul","li","whileHover","scale","textShadow","AdminHome","AdminList","setProjectsList","onDeleteWork","delete","Table","responsive","color","tempArr","element","AdminWrite","projectContent","setProjectContetns","getValue","post","alert","send","Admin","backgroundColor","height","position","zIndex","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","match","params","setProject","newArr","filter","parseInt","mapDispatchToProps","loadingProjects","dispatch","payload","loadingSuccess","loadingFailure","loading","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","projectsReducer","state","action","userAuth","loginSuccess","register","userData","rootReducer","combineReducers","user","middleware","logger","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ac0a92c.chunk.js","sourcesContent":["export const GLOBAL_LOADED_FAILURE = 'GLOBAL_LOADED_FAILURE';\nexport const GLOBAL_LOADED_SUCEESS = 'GLOBAL_LOADED_SUCEESS';\nexport const GLOBAL_LOADED_REQUEST = 'GLOBAL_LOADED_REQUEST';\n","// 유저 관리\nexport const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './main.css';\nimport { motion } from 'framer-motion';\n\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [leftBoxClass, setLeftBoxClass] = useState('home-box-l home-hide-l');\n  const [rightBoxClass, setRightBoxClass] = useState('home-box-r home-hide-r');\n\n  useEffect(() => {\n    // setLeftBoxClass('home-box-l');\n    // setRightBoxClass('home-box-r');\n\n    return () => {\n      console.log('언마운트');\n    };\n  }, []);\n\n  const boxTransition = {\n    leftIn: {\n      transform: 'translate(0%, 0)',\n    },\n    leftOut: {\n      transform: 'translate(-100%, 0)',\n    },\n    rightIn: {\n      transform: 'translate(0%, 0)',\n    },\n    rightOut: {\n      transform: 'translate(100%, 0)',\n    },\n  };\n\n  return (\n    <>\n      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} transition={{ duration: 0.3 }}>\n        <div className='land-contain'>\n          <motion.div initial='leftOut' animate='leftIn' exit='leftOut' transition={{ duration: 0.5 }} variants={boxTransition} className={leftBoxClass} />\n          <motion.div initial='rightOut' animate='rightIn' exit='rightOut' transition={{ duration: 0.5 }} variants={boxTransition} className={rightBoxClass} />\n        </div>\n      </motion.div>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './MemoryGame.css';\n\nconst MemoryClearModal = ({ time, rankList, setIsClear }) => {\n  const [newRankList, setNewRankList] = useState(rankList);\n  const [displayRankList, setDisplayRankList] = useState([]);\n  const [newRank, setNewRank] = useState({\n    name: '',\n    time: time,\n  });\n  const { name } = newRank;\n  const [isRankRecord, setIsRankRecord] = useState(true);\n\n  // 작성되는 글의 각 요소의 밸류값을 받아오는 함수\n  const getValue = (e) => {\n    const { name, value } = e.target;\n    setNewRank({\n      ...newRank,\n      [name]: value,\n    });\n  };\n\n  const rankRecordHandler = () => {\n    console.log(newRankList);\n    let arr = [...newRankList, newRank];\n    arr.sort(function (a, b) {\n      return a.time - b.time;\n    });\n    setNewRankList(arr);\n    setIsRankRecord(false);\n  };\n\n  useEffect(() => {\n    // setDisplayRankList(newRankList);\n    // displayRankList.length = 5;\n    axios\n      .put('/api/gamerank/memorygame/update', {\n        rank: newRankList,\n      })\n      .then((response) => {\n        // console.log(response.data);\n      });\n  }, [isRankRecord]);\n\n  return (\n    <div className='card-clear-pop'>\n      <div className='card-clear-modal'>\n        <h3>CLEAR!</h3>\n        <article className='memory-timer'>\n          <span>You left - </span>\n          {time > 60000 && <span>{('0' + Math.floor((time / 60000) % 60)).slice(-2)}m </span>}\n          <span>{('0' + Math.floor((time / 1000) % 60)).slice(-2)}.</span>\n          <span>{('0' + ((time / 10) % 100)).slice(-2)}s</span>\n        </article>\n        {isRankRecord ? (\n          <div className='card-modal-rank'>\n            <h2>Record Your Score!</h2>\n            <article className='memory-timer'>\n              {time > 60000 && <span>{('0' + Math.floor((time / 60000) % 60)).slice(-2)}m </span>}\n              <span>{('0' + Math.floor((time / 1000) % 60)).slice(-2)}.</span>\n              <span>{('0' + ((time / 10) % 100)).slice(-2)}s</span>\n            </article>\n            <div>\n              <input className='card-rank-input' type='text' value={name} name='name' onChange={getValue} placeholder='Your Name' />\n            </div>\n            <button className='card-rank-confirm' onClick={rankRecordHandler}>\n              Confirm\n            </button>\n          </div>\n        ) : (\n          <div className='card-modal-rank rank-zone'>\n            <h2>Ranking</h2>\n            <ul className='rank-list'>\n              {newRankList &&\n                newRankList.map((rank, i) => {\n                  return (\n                    <li key={i}>\n                      <span className='rank-rate'>{i + 1}.</span>\n                      <span className='rank-name'>{rank.name}</span>\n                      <span className='rank-score'>\n                        {rank.time > 60000 && <span>{('0' + Math.floor((rank.time / 60000) % 60)).slice(-2)}m </span>}\n                        <span>{('0' + Math.floor((rank.time / 1000) % 60)).slice(-2)}.</span>\n                        <span>{('0' + ((rank.time / 10) % 100)).slice(-2)}s</span>\n                      </span>\n                    </li>\n                  );\n                })}\n            </ul>\n          </div>\n        )}\n\n        <button className='card-modal-close' onClick={() => setIsClear(false)}>\n          닫기\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MemoryClearModal;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './MemoryGame.css';\nimport MemoryClearModal from './MemoryClearModal';\n\nconst MemoryGame = () => {\n  const [rankList, setRankList] = useState([]);\n  useEffect(() => {\n    axios\n      .get(`/api/gamerank/memorygame`)\n      .then((res) => {\n        setRankList(res.data.rank);\n        //   setIsLoading(false);\n        // console.log(res.data.rank);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  // get pokemon api\n  const url = 'https://pokeres.bastionbot.org/images/pokemon';\n  // 게임 시작 여부\n  const [isGameStart, setIsGameStart] = useState(false);\n  // 열린 카드 배열\n  const [openCard, setOpenCard] = useState([]);\n  // 열린 카드가 일치하다면 그것을 담을 배열\n  const [matched, setMatched] = useState([]);\n\n  // 게임 클리어 여부\n  const [isClear, setIsClear] = useState(false);\n\n  // 카드 홀드 여부\n  const [isCardHold, setIscardHold] = useState(false);\n\n  // 타이머 변수\n  const [time, setTime] = useState(0);\n  const [timerOn, setTimerOn] = useState(false);\n\n  // 포켓몬을 담은 변수\n  const pokemons = [\n    { id: 1, name: '이상해씨' },\n    { id: 4, name: '파이리' },\n    { id: 8, name: '어니부기' },\n    { id: 9, name: '거북왕' },\n    { id: 6, name: '리자몽' },\n    { id: 10, name: '캐터피' },\n    { id: 19, name: '꼬렛' },\n    { id: 39, name: '푸린' },\n  ];\n  // 카드 랜덤으로 섞는 함수\n  const shuffle = (a) => {\n    let j, x, i;\n    for (i = a.length; i; i -= 1) {\n      j = Math.floor(Math.random() * i);\n      x = a[i - 1];\n      a[i - 1] = a[j];\n      a[j] = x;\n    }\n  };\n\n  // 각쌍의 카드 만들기\n  const [pairOfPokemons, setPairOfPokemons] = useState([...pokemons, ...pokemons]);\n  // open only that card which was matched\n\n  // 스타트게임 버튼을 누르면 실행되는 함수.\n  const startGame = (e) => {\n    e.preventDefault();\n    // 타이머 시작\n    setTime(0);\n    setTimerOn(true);\n    // 게임시작 여부 true로 변경\n    setIsGameStart(true);\n    // 오픈된 카드 초기화\n    setOpenCard([]);\n    // 매치된 함수 초기화\n    setMatched([]);\n    // 각쌍을 만든 포켓몬의 배열을 복제하고 랜덤으로 섞고 바꿔준다.\n    let arr = [...pairOfPokemons];\n    shuffle(arr);\n    setPairOfPokemons(arr);\n  };\n\n  const stopGame = () => {\n    // 타이머 종료\n    setTimerOn(false);\n    // 타이머 시간을 0으로 바꿔준다\n    // 게임시작 여부 false로 변경\n    setIsGameStart(false);\n  };\n\n  // 게임이 다 끝난 후 재시작하는 버튼\n  const restartGame = (e) => {\n    e.preventDefault();\n    stopGame();\n    setTime(0);\n  };\n\n  // 타이머에 변동이 있다면 실행되는 이펙트\n  useEffect(() => {\n    // 타이머 실행의 주가 될 interval을 초기값 null로 지정\n    let interval = null;\n    // 만약 timerOn이 true가 되면 실행될 부분\n    if (timerOn) {\n      // 0.01초 단위로 타이머가 올라간다\n      interval = setInterval(() => {\n        setTime((prevTime) => prevTime + 10);\n      }, 10);\n      // timerOn이 false가 되면 interval을 종료한다.\n    } else {\n      clearInterval(interval);\n    }\n    // 퉤\n    return () => clearInterval(interval);\n  }, [timerOn]);\n\n  // openCard배열에 변화가 있다면 실행될 이펙트\n  useEffect(() => {\n    // console.log(openCard);\n\n    if (openCard < 2) return;\n\n    // firstmatch에 첫번째 클릭하여 오픈된 카드의 index에 해당하는 숫자를 pairOfPokemons 배열에 비교하여\n    // pairOfPokemons 배열의 index번째의 정보를 담는다.\n    const firstmatch = pairOfPokemons[openCard[0]];\n    // 위와 마찬가지로 secondmatch에 카드의 정보를 담는다.\n    const secondmatch = pairOfPokemons[openCard[1]];\n    // 만약 두번째 클릭한 카드(secondmatch)가 있다면\n    // 첫번째 카드와 두번째 카드의 id 정보를 비교한다\n    if (secondmatch && firstmatch.id === secondmatch.id) {\n      //두 카드의 id값이 같다면\n      // matched배열에 첫번째 카드의 id를 저장한다.\n      // 이렇게 저장을 하면 아래의 코드 중\n      // if (matched.includes(pokemon.id)) flipCard = true;\n      // 이것에 의하여 매치된 카드는 오픈상태를 유지하게 된다.\n      setMatched([...matched, firstmatch.id]);\n    }\n    // 그 후 오픈된 카드의 갯수가 2개라면 0.6초 뒤에 오픈된 카드를 다시 뒤집는다.\n    if (openCard.length === 2) {\n      setIscardHold(true);\n      setTimeout(() => {\n        setIscardHold(false);\n        setOpenCard([]);\n      }, 400);\n    }\n  }, [openCard]);\n\n  useEffect(() => {\n    // console.log(matched);\n    if (matched.length === 8) {\n      setIsClear(true);\n      stopGame();\n    }\n  }, [matched]);\n\n  // 카드를 클릭하면 실행할 함수\n  // openCard 배열에 현재 클릭된 카드의 인덱스를 담는다.\n  const handleFlip = (i) => {\n    setOpenCard((opened) => [...opened, i]);\n  };\n\n  return (\n    <>\n      <div className='memory-game'>\n        <h2 className='memory-title'>Memory Game</h2>\n        {isGameStart ? (\n          <button className='memory-start-btn' onClick={restartGame}>\n            Restart\n          </button>\n        ) : (\n          <button className='memory-start-btn' onClick={startGame}>\n            Start\n          </button>\n        )}\n        <article className='memory-timer'>\n          <span>{('0' + Math.floor((time / 60000) % 60)).slice(-2)}m </span>\n          <span>{('0' + Math.floor((time / 1000) % 60)).slice(-2)}s </span>\n          <span>{('0' + ((time / 10) % 100)).slice(-2)}</span>\n        </article>\n        <div className={`cards ${isGameStart ? '' : 'hold'}`}>\n          {pairOfPokemons.map((pokemon, i) => {\n            // let's flip the card with flipped css class\n            let flipCard;\n            flipCard = false;\n\n            // openCard 배열의 담긴 인덱스에 속하는 카드는 flipCard변수를 true상태로 유지.\n            if (openCard.includes(i)) flipCard = true;\n\n            // matched 배열의 담긴 요소의 id와 일치하는 카드는 flipCard변수를 true상태로 유지.\n            if (matched.includes(pokemon.id)) flipCard = true;\n\n            return (\n              <div\n                className={`pokemon-card ${flipCard ? 'flipped' : ''} ${isCardHold ? 'hold' : ''}`}\n                key={i} //\n                onClick={(e) => {\n                  handleFlip(i);\n                }}\n              >\n                <div className='inner'>\n                  <div className='front'>\n                    <img src={`${url}/${pokemon.id}.png`} alt='pokemon' width='100' />\n                  </div>\n                  <div className='back'></div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        {isClear && rankList.length > 0 ? <MemoryClearModal time={time} rankList={rankList} setIsClear={setIsClear} /> : null}\n      </div>\n    </>\n  );\n};\n\nexport default MemoryGame;\n","import React from 'react';\n\nconst EtcGame = () => {\n  return <div>이것은 다른 게임임</div>;\n};\n\nexport default EtcGame;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Route, Switch, useLocation, BrowserRouter as Router, useHistory } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport MemoryGame from './Games/MemoryGame/MemoryGame';\nimport EtcGame from './Games/EtcGame';\nconst Games = () => {\n  const [gameRank, setGameRank] = useState([]);\n  const [memoryRank, setMemoryRank] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    axios\n      .get(`/api/gamerank`)\n      .then((res) => {\n        setGameRank(res.data);\n        // console.log(res.data);\n        setMemoryRank(res.data[0].rank.slice(0, 5));\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const location = useLocation();\n  let history = useHistory();\n  const gameTextMotion = {\n    start: {\n      opacity: 0,\n      fontSize: '10px',\n      fontWeight: '300',\n      y: -400,\n    },\n    in: {\n      opacity: 1,\n      fontSize: '48px',\n      fontWeight: '700',\n      y: 0,\n    },\n    end: {\n      opacity: 0,\n      fontSize: '24px',\n      fontWeight: '400',\n      y: 600,\n    },\n  };\n\n  const gameListVariants = {\n    start: {\n      opacity: 0,\n    },\n    in: {\n      opacity: 1,\n    },\n    end: {\n      opacity: 0,\n    },\n  };\n\n  const onCardClick = (e) => {\n    let gameId = e.target.dataset.name;\n    // console.log(gameId);\n    history.push(`/games/${gameId}`);\n  };\n\n  return (\n    <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} transition={{ duration: 0.3 }} className='games-back'>\n      <div className='games-contain'>\n        <Router>\n          <AnimatePresence exitBeforeEnter>\n            <Switch location={location} key={location.pathname}>\n              <Route path='/games/memorygame'>\n                <MemoryGame />\n              </Route>\n              <Route path='/games/etcgame'>\n                <EtcGame />\n              </Route>\n              <Route exact path='/games'>\n                <motion.p initial='start' animate='in' exit='end' transition={{ duration: 0.3 }} variants={gameTextMotion}>\n                  Games\n                </motion.p>\n                {!isLoading && (\n                  <motion.div\n                    className='games-list'\n                    initial='start' //\n                    animate='in'\n                    exit='end'\n                    transition={{ duration: 0.3 }}\n                    variants={gameListVariants}\n                  >\n                    <div className='games-el' onClick={onCardClick} data-name='memorygame'>\n                      <h2>Memory Games</h2>\n                      <div className='games-desc'>\n                        <article className='games-el-left'>\n                          <img src='https://coding-woojin.s3.ap-northeast-2.amazonaws.com/memory-thumb.png' alt='' />\n                        </article>\n                        <article className='games-el-right'>\n                          <h2>Ranking</h2>\n                          <ul>\n                            {memoryRank.map((rank, i) => {\n                              return (\n                                <li key={i}>\n                                  <span className='rank-rate'>{i + 1}.</span>\n                                  <span className='rank-name'>{rank.name}</span>\n                                  <span className='rank-score'>\n                                    {rank.time > 60000 && <span>{('0' + Math.floor((rank.time / 60000) % 60)).slice(-2)}m </span>}\n                                    <span>{('0' + Math.floor((rank.time / 1000) % 60)).slice(-2)}.</span>\n                                    <span>{('0' + ((rank.time / 10) % 100)).slice(-2)}s</span>\n                                  </span>\n                                </li>\n                              );\n                            })}\n                          </ul>\n                        </article>\n                      </div>\n                    </div>\n                    <div className='games-el' onClick={onCardClick} data-name='etcgame'>\n                      <h2>ETC Games</h2>\n                    </div>\n                  </motion.div>\n                )}\n              </Route>\n            </Switch>\n          </AnimatePresence>\n        </Router>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default Games;\n","import React from 'react';\nimport { motion } from 'framer-motion';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst Projects = ({ projectsList }) => {\n  let history = useHistory();\n\n  const projectBoxWrap = {\n    hidden: { opacity: 1 },\n    visible: {\n      opacity: 1,\n      transition: {\n        delayChildren: 0,\n        staggerChildren: 0.1,\n      },\n    },\n  };\n\n  const projectBoxMotion = {\n    hidden: { y: 50, opacity: 0 },\n    visible: {\n      y: 0,\n      opacity: 1,\n    },\n  };\n\n  // 프로젝트 카드 클릭시 해당 상세페이지로 이동\n  const onCardClick = (e) => {\n    let workId = e.target.dataset.id;\n    history.push(`/projects/${workId}`);\n  };\n\n  return (\n    <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }} transition={{ duration: 0.3 }}>\n      <div className='projects-contain'>\n        <motion.div className='project-box-wrap' variants={projectBoxWrap} initial='hidden' animate='visible' exit='hidden'>\n          {projectsList.map((project, i) => (\n            <motion.div\n              onClick={onCardClick} //\n              data-id={project._id}\n              variants={projectBoxMotion}\n              style={{ backgroundImage: `url('${project.thumb}')` }}\n              className={`project-box`}\n              key={i}\n            >\n              <h4 className='project-box-title'>{project.title}</h4>\n              <p className='project-box-content'>{project.content}</p>\n            </motion.div>\n          ))}\n        </motion.div>\n      </div>\n\n      {/* 이 부분에서 새로고침이나 url을 통한 접근 시 렌더링이 안되는 현상 체크 */}\n      {/* <AnimatePresence exitBeforeEnter>\n        <Switch location={location} key={location.key}>\n          <Route path='/projects/:id'>\n            <ProjectDetail />\n          </Route>\n        </Switch>\n      </AnimatePresence> */}\n    </motion.div>\n  );\n};\n\nconst mapStateToProps = ({ projects }) => {\n  return {\n    projectsList: projects.projects,\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(Projects));\n","import React, { useState } from 'react';\n\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link, useHistory } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport './NavBar.css';\n\nconst NavBar = () => {\n  const navListNames = {\n    names: ['projects', 'games', 'blog', 'github', 'admin'],\n  };\n  const [isNavOpen, setIsNavOpen] = useState(false);\n\n  const navToggleHandler = () => {\n    setIsNavOpen(!isNavOpen);\n  };\n  const navCloseHandler = () => {\n    setIsNavOpen(false);\n  };\n\n  const navContainVariants = {\n    in: {\n      opacity: 1,\n      transition: { duration: 0.5, staggerChildren: 0.1 },\n    },\n    out: {\n      opacity: 0,\n      transition: { duration: 0.5, staggerChildren: 0.1 },\n    },\n  };\n\n  const navUlVariants = {\n    in: {\n      opacity: 1,\n      y: 0,\n      transition: { duration: 0.5, staggerChildren: 0.1 },\n    },\n    out: {\n      opacity: 0,\n      y: 200,\n      transition: { duration: 0.5, staggerChildren: 0.1 },\n    },\n  };\n\n  const navElVariants = {\n    in: {\n      opacity: 1,\n      x: 0,\n    },\n    out: {\n      opacity: 0,\n      x: -70,\n    },\n  };\n\n  return (\n    <>\n      <h3 className='nav-logo' onClick={navCloseHandler}>\n        <Link to={'/'}>J.com</Link>\n      </h3>\n      <div className={isNavOpen ? 'nav-toggle-btn opened' : 'nav-toggle-btn'} onClick={navToggleHandler}>\n        <div className='nav-toggle-top'></div>\n        <div className='nav-toggle-bottom'></div>\n      </div>\n      <AnimatePresence>\n        {isNavOpen ? (\n          <motion.div\n            initial='out' //\n            animate='in'\n            exit='out'\n            variants={navContainVariants}\n            className='nav-contain'\n          >\n            <motion.ul className='nav-list' variants={navUlVariants}>\n              {navListNames.names.map((name, i) => (\n                <motion.li\n                  key={i} //\n                  variants={navElVariants}\n                  transition={{ duration: 0.4 }}\n                  whileHover={{\n                    scale: 1.1,\n                    textShadow: '0px 0px 2px rgb(255,255,255)',\n                  }}\n                  onClick={navCloseHandler}\n                >\n                  <Link to={`/${name}`}>{name}</Link>\n                </motion.li>\n              ))}\n            </motion.ul>\n          </motion.div>\n        ) : null}\n      </AnimatePresence>\n    </>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\n\nconst AdminHome = () => {\n  return <div>AdminHome</div>;\n};\n\nexport default AdminHome;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Table } from 'react-bootstrap';\n\nconst AdminList = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [projectsList, setProjectsList] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get('/api/projects/list')\n      .then((res) => {\n        setProjectsList(res.data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  // 삭제버튼 클릭 시 워크 삭제\n  const onDeleteWork = (e) => {\n    let workId = e.target.dataset.id;\n    axios\n      //DELETE 요청의 두 번째 인자에 data: {} atrribute를 넣어주면 된다.\n      .delete(`/api/projects/delete/${workId}`, {\n        data: { _id: workId },\n      })\n      .then((response) => {\n        console.log(response.data);\n      });\n  };\n\n  // 글번호 오름차순 정렬\n  const handleNumberSortUp = () => {\n    let tempArr = [...projectsList];\n    tempArr.sort(function (a, b) {\n      return a._id < b._id ? -1 : a._id > b._id ? 1 : 0;\n    });\n    setProjectsList(tempArr);\n  };\n  // 글번호 내림차순 정렬\n  const handleNumberSortDown = () => {\n    let tempArr = [...projectsList];\n    tempArr.sort(function (a, b) {\n      return a._id > b._id ? -1 : a._id < b._id ? 1 : 0;\n    });\n    setProjectsList(tempArr);\n  };\n  // 카테고리 오름차순 정렬\n  const handleCategorySortUp = () => {\n    let tempArr = [...projectsList];\n    tempArr.sort(function (a, b) {\n      let x = a.category.toLowerCase();\n      let y = b.category.toLowerCase();\n      if (x < y) {\n        return -1;\n      }\n      if (x > y) {\n        return 1;\n      }\n      return 0;\n    });\n    setProjectsList(tempArr);\n  };\n  // 카테고리 내림차순 정렬\n  const handleCategorySortDown = () => {\n    let tempArr = [...projectsList];\n    tempArr.sort(function (a, b) {\n      let x = a.category.name[0].toLowerCase();\n      let y = b.category.name[0].toLowerCase();\n      if (x < y) {\n        return 1;\n      }\n      if (x > y) {\n        return -1;\n      }\n      return 0;\n    });\n    setProjectsList(tempArr);\n  };\n\n  var tStyle = { color: 'blue' };\n\n  return isLoading ? (\n    <div>Loading...</div>\n  ) : (\n    <>\n      <Table responsive>\n        <thead>\n          <tr style={tStyle}>\n            <th>\n              <div className='sort-flex'>\n                <span>글번호</span>\n                <div className='sort-arrow'>\n                  <div className='arrow-up' onClick={handleNumberSortUp}></div>\n                  <div className='arrow-down' onClick={handleNumberSortDown}></div>\n                </div>\n              </div>\n            </th>\n            <th>제목</th>\n            <th>내용</th>\n            <th>비고</th>\n          </tr>\n        </thead>\n        <tbody>\n          {projectsList.map((element, i) => {\n            return (\n              // a = props.state[i]\n              <tr key={i}>\n                <td>{element._id}</td>\n                <td>{element.title}</td>\n                <td>{element.content}</td>\n                <td>\n                  <button data-id={element._id} onClick={onDeleteWork}>\n                    삭제\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default AdminList;\n","import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AdminWrite = () => {\n  const [projectContent, setProjectContetns] = useState({\n    title: '',\n    content: '',\n    thumb: '',\n  });\n\n  const { title, content, thumb } = projectContent;\n\n  // 작성되는 글의 각 요소의 밸류값을 받아오는 함수\n  const getValue = (e) => {\n    const { name, value } = e.target;\n    setProjectContetns({\n      ...projectContent,\n      [name]: value,\n    });\n  };\n\n  const send = (e) => {\n    e.preventDefault();\n    axios\n      .post('/api/projects/add', {\n        title: projectContent.title,\n        content: projectContent.content,\n        thumb: projectContent.thumb,\n      })\n      .then((response) => {\n        console.log(response.data);\n      });\n    alert('등록 완료!');\n  };\n\n  return (\n    <>\n      <div>AdminWrite</div>\n      <form>\n        title\n        <input type='text' value={title} name='title' onChange={getValue} />\n        <br />\n        content\n        <input type='text' value={content} name='content' onChange={getValue} />\n        <br />\n        thumb\n        <input type='text' value={thumb} name='thumb' onChange={getValue} />\n        <br />\n        <button\n          onClick={(e) => {\n            send(e);\n          }}\n        >\n          등록\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default AdminWrite;\n","import React from 'react';\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\nimport AdminHome from './AdminHome';\nimport AdminList from './AdminList';\nimport AdminWrite from './AdminWrite';\nconst Admin = () => {\n  return (\n    <div style={{ backgroundColor: '#fff', width: '100vw', height: '100vh', position: 'relative', zIndex: 1000 }}>\n      <Router>\n        <Navbar bg='light' expand='lg'>\n          <Navbar.Brand href='/admin'>J.COM - admin</Navbar.Brand>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='mr-auto'>\n              <Nav.Link as={Link} to='/admin'>\n                Home\n              </Nav.Link>\n              <Nav.Link as={Link} to='/admin/write'>\n                Write\n              </Nav.Link>\n              <Nav.Link as={Link} to='/admin/list'>\n                List\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n\n        <div className='admin-container'>\n          <Switch>\n            <Route exact path='/admin'>\n              <AdminHome />\n            </Route>\n            <Route path='/admin/write'>\n              <AdminWrite />\n            </Route>\n            <Route path='/admin/list'>\n              <AdminList />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n};\n\nexport default Admin;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { connect } from 'react-redux';\n\nimport './main.css';\n\nconst ProjectDetail = ({ match, projectsList }) => {\n  const id = match.params.id;\n  const [project, setProject] = useState({});\n  let history = useHistory();\n\n  useEffect(() => {\n    const newArr = [...projectsList].filter((data) => data._id === parseInt(id));\n    setProject(...newArr);\n  }, []);\n\n  const projectDetailMotion = {\n    in: {\n      y: '0%',\n    },\n    out: {\n      y: '100%',\n    },\n  };\n\n  const projectClose = () => {\n    history.push('/projects');\n  };\n\n  return (\n    <motion.div initial='out' animate='in' exit='out' transition={{ duration: 0.3 }} variants={projectDetailMotion} className='projectDetail-wrap'>\n      <h1>{project.title}</h1>\n      <p>{project.content}</p>\n      <div className='project-close-btn' onClick={projectClose}></div>\n    </motion.div>\n  );\n};\n\nconst mapStateToProps = ({ projects }) => {\n  return {\n    projectsList: projects.projects,\n  };\n};\n\nexport default connect(mapStateToProps)(withRouter(ProjectDetail));\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport { AnimatePresence } from 'framer-motion';\nimport { connect } from 'react-redux';\nimport { loadingProjects } from './redux';\n\nimport './App.css';\n\nimport Home from './components/Home';\nimport Games from './components/Games';\nimport Projects from './components/Projects';\nimport NavBar from './components/NavBar';\nimport Admin from './components/admin/Admin';\nimport ProjectDetail from './components/ProjectDetail';\n\nconst App = ({ loading, loadingProjects }) => {\n  const location = useLocation();\n\n  useEffect(() => {\n    loadingProjects();\n  }, []);\n\n  return (\n    <div className='App'>\n      {loading ? (\n        <div style={{ color: '#fff' }}>Loading...</div>\n      ) : (\n        <>\n          <NavBar />\n          <div className='whole-container'>\n            <AnimatePresence exitBeforeEnter>\n              <Switch location={location} key={location.pathname}>\n                <Route path='/projects/:id'>\n                  <ProjectDetail />\n                </Route>\n                <Route exact path='/projects'>\n                  <Projects />\n                </Route>\n                <Route path='/games'>\n                  <Games />\n                </Route>\n                <Route path='/admin'>\n                  <Admin />\n                </Route>\n                <Route exact path='/'>\n                  <Home />\n                </Route>\n              </Switch>\n            </AnimatePresence>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ projects }) => {\n  return {\n    projects: projects.projects,\n    loading: projects.loading,\n  };\n};\n\nconst mapDispatchToProps = {\n  loadingProjects,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { GLOBAL_LOADED_FAILURE, GLOBAL_LOADED_SUCEESS, GLOBAL_LOADED_REQUEST } from './types';\nimport axios from 'axios';\n\nconst loadingSuccess = (data) => {\n  return {\n    type: GLOBAL_LOADED_SUCEESS,\n    payload: data,\n  };\n};\n\nconst loadingFailure = (err) => {\n  return {\n    type: GLOBAL_LOADED_FAILURE,\n    payload: err,\n  };\n};\n\nconst loadingRequest = () => {\n  return {\n    type: GLOBAL_LOADED_REQUEST,\n  };\n};\n\n// 프로젝트 목록을 디스패치로 받아와 스토어에 저장하는 부분\nexport const loadingProjects = () => {\n  return (dispatch) => {\n    dispatch(loadingRequest());\n    axios\n      .get('/api/projects/list')\n      .then((response) => response.data)\n      .then((data) => dispatch(loadingSuccess(data)))\n      .catch((err) => {\n        dispatch(loadingFailure(err));\n      });\n  };\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { GLOBAL_LOADED_FAILURE, GLOBAL_LOADED_SUCEESS, GLOBAL_LOADED_REQUEST } from './types';\n\nconst initialState = {\n  projects: [],\n  loading: true,\n  err: null,\n};\n\nconst projectsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GLOBAL_LOADED_REQUEST:\n      return { ...state, loading: true };\n\n    case GLOBAL_LOADED_SUCEESS:\n      return { ...state, projects: action.payload, loading: false };\n\n    case GLOBAL_LOADED_FAILURE:\n      return { ...state, err: action.payload, loading: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default projectsReducer;\n","/* eslint-disable */\n\nimport { LOGIN_USER, REGISTER_USER, AUTH_USER } from './types';\n\nconst initialState = {};\n\nconst userAuth = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_USER:\n      return { ...state, loginSuccess: action.payload };\n\n    case REGISTER_USER:\n      return { ...state, register: action.payload };\n\n    case AUTH_USER:\n      return { ...state, userData: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default userAuth;\n","import { combineReducers } from 'redux';\nimport projectsReducer from './projects/reducers';\nimport userAuth from './users/reducers';\n\nconst rootReducer = combineReducers({\n  projects: projectsReducer,\n  user: userAuth,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './rootReducer';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst middleware = [logger, thunk];\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Reset } from 'styled-reset';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <Reset />\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}